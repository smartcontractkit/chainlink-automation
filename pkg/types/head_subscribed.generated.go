// Code generated by mockery v2.12.1. DO NOT EDIT.

package types

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockHeadSubscriber is an autogenerated mock type for the HeadSubscriber type
type MockHeadSubscriber struct {
	mock.Mock
}

// OnNewHead provides a mock function with given fields: ctx, cb
func (_m *MockHeadSubscriber) OnNewHead(ctx context.Context, cb func(BlockKey)) error {
	ret := _m.Called(ctx, cb)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, func(BlockKey)) error); ok {
		r0 = rf(ctx, cb)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockHeadSubscriber creates a new instance of MockHeadSubscriber. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHeadSubscriber(t testing.TB) *MockHeadSubscriber {
	mock := &MockHeadSubscriber{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
