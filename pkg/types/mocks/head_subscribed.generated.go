// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	types "github.com/smartcontractkit/ocr2keepers/pkg/types"
	mock "github.com/stretchr/testify/mock"
)

// HeadSubscriber is an autogenerated mock type for the HeadSubscriber type
type HeadSubscriber struct {
	mock.Mock
}

// HeadTicker provides a mock function with given fields:
func (_m *HeadSubscriber) HeadTicker() chan types.BlockKey {
	ret := _m.Called()

	var r0 chan types.BlockKey
	if rf, ok := ret.Get(0).(func() chan types.BlockKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan types.BlockKey)
		}
	}

	return r0
}

type mockConstructorTestingTNewHeadSubscriber interface {
	mock.TestingT
	Cleanup(func())
}

// NewHeadSubscriber creates a new instance of HeadSubscriber. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHeadSubscriber(t mockConstructorTestingTNewHeadSubscriber) *HeadSubscriber {
	mock := &HeadSubscriber{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
