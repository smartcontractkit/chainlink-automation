// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	"testing"

	"github.com/smartcontractkit/ocr2keepers/pkg/types"
	"github.com/stretchr/testify/mock"
)

// MockHeadSubscriber is an autogenerated mock type for the HeadSubscriber type
type MockHeadSubscriber struct {
	mock.Mock
}

// HeadTicker provides a mock function with given fields:
func (_m *MockHeadSubscriber) HeadTicker() chan types.BlockKey {
	ret := _m.Called()

	var r0 chan types.BlockKey
	if rf, ok := ret.Get(0).(func() chan types.BlockKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan types.BlockKey)
		}
	}

	return r0
}

// NewMockHeadSubscriber creates a new instance of MockHeadSubscriber. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHeadSubscriber(t testing.TB) *MockHeadSubscriber {
	mock := &MockHeadSubscriber{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
