// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	types "github.com/smartcontractkit/ocr2keepers/pkg/v3/types"
)

// MockPreProcessor is an autogenerated mock type for the PreProcessor type
type MockPreProcessor struct {
	mock.Mock
}

// PreProcess provides a mock function with given fields: _a0, _a1
func (_m *MockPreProcessor) PreProcess(_a0 context.Context, _a1 []types.UpkeepPayload) ([]types.UpkeepPayload, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []types.UpkeepPayload
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []types.UpkeepPayload) ([]types.UpkeepPayload, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []types.UpkeepPayload) []types.UpkeepPayload); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.UpkeepPayload)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []types.UpkeepPayload) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockPreProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPreProcessor creates a new instance of MockPreProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPreProcessor(t mockConstructorTestingTNewMockPreProcessor) *MockPreProcessor {
	mock := &MockPreProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
