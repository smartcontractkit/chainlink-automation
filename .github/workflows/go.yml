name: Go Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: "go.mod"

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: latest

  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: "go.mod"

    - name: Run Unit Tests
      run: |
          go test ./... -coverprofile cover.out

    - name: Quality Gate - V3 test coverage above threshold
      env:
        TESTCOVERAGE_THRESHOLD: 70
      run: |
          go test github.com/smartcontractkit/ocr2keepers/pkg/v3/... -coverprofile coverV3.out -covermode count
          echo "Quality Gate: checking V3 test coverage is above threshold ..."
          echo "Threshold              : $TESTCOVERAGE_THRESHOLD %"
          totalCoverage=`go tool cover -func=coverV3.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage  : $totalCoverage %"
          if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "V3 test coverage OK"
          else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
          fi

  race-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: "go.mod"

    - name: Run Race Tests
      run: go test -race ./...

  fuzz-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: "go.mod"

    - name: Run Keepers Package Fuzz Tests
      run: go test --fuzz=Fuzz --fuzztime=10s -run=^# github.com/smartcontractkit/ocr2keepers/pkg
