name: Linting w/ Unit, Fuzz, and Race Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  lint:
    name: Code Linting Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  unit-test:
    name: Unit Test Checks
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Unit Tests
      run: |
        go test -v ./... -coverprofile cover.out -covermode count
        go tool cover -func cover.out

    - name: Total Code Coverage Threshold Check
      env:
        TESTCOVERAGE_THRESHOLD: 50
      run: |
        echo "Code Coverage Threshold Check: coverage should be above threshold"
        echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
        totalCoverage=`go tool cover -func=cover.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
        echo "Current test coverage : $totalCoverage %"
        if (( $(echo "totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
          echo "OK"
        else
          echo "Current test coverage is below threshold."
          echo "Check failed"
          exit 1
        fi

  internal-unit-test:
    name: Internal Package Coverage Check
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Unit Tests
      run: |
        go test -v ./internal/... -coverprofile cover.out -covermode count
        go tool cover -func cover.out

    - name: Internal Package Code Coverage Threshold Check
      env:
        TESTCOVERAGE_THRESHOLD: 80
      run: |
        echo "Code Coverage Threshold Check: coverage should be above threshold"
        echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
        totalCoverage=`go tool cover -func=cover.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
        echo "Current test coverage : $totalCoverage %"
        if (( $(echo "totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
          echo "OK"
        else
          echo "Current test coverage is below threshold."
          echo "Check failed"
          exit 1
        fi
        
  race-test:
    name: Race Condition Checks
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Race Tests
      run: go test -race ./...

  fuzz-test:
    name: Fuzz Test Checks
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Keepers Package Fuzz Tests
      run: go test --fuzz=Fuzz --fuzztime=10s -run=^# github.com/smartcontractkit/ocr2keepers/internal/keepers
