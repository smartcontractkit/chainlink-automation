name: Go Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: golangci-lint
      ##
      # XXX: change this to the official action once multiple --out-format args are supported.
      # See: https://github.com/golangci/golangci-lint-action/issues/612
      ##
      uses: smartcontractkit/golangci-lint-action@54ab6c5f11d66a92d14c3f7cc41ea13f676644bd # feature/multiple-output-formats-backup
      with:
        version: v1.52.1
        allow-extra-out-format-args: true
        args: --out-format checkstyle:golangci-lint-report.xml
    
    - name: Print lint report artifact
      if: always()
      run: test -f golangci-lint-report.xml && cat golangci-lint-report.xml || true
    - name: Store lint report artifact
      if: always()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: golangci-lint-report
        path: golangci-lint-report.xml

  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Unit Tests
      run: go test -v ./... -coverpkg=./... -coverprofile=coverage.txt $1 | tee $OUTPUT_FILE

  race-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Race Tests
      run: go test -race ./...

  fuzz-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Keepers Package Fuzz Tests
      run: go test --fuzz=Fuzz --fuzztime=10s -run=^# github.com/smartcontractkit/ocr2keepers/internal/keepers
  
  sonarqube:
    name: SonarQube Scan
    needs: [unit-test, lint]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # fetches all history for all tags and branches to provide more metadata for sonar reports
      - name: Set SonarQube Report Paths
        id: sonarqube_report_paths
        shell: bash
        run: |
          echo "sonarqube_tests_report_paths=./output.txt" >> $GITHUB_OUTPUT
          echo "sonarqube_coverage_report_paths=./coverage.txt" >> $GITHUB_OUTPUT
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a # v1.2.0
        with:
          args: >
            -Dsonar.go.tests.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_tests_report_paths }}
            -Dsonar.go.coverage.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_coverage_report_paths }}
            -Dsonar.go.golangci-lint.reportPaths=golangci-lint-report/golangci-lint-report.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
